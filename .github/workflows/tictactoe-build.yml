name: Build,Analyze,scan
on:
  push:
    branches:
      - main
jobs:
  build-analyze-scan:
    name: Build
    runs-on: [self-hosted]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Build and analyze with SonarQube
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: install npm dependencies
        run: npm i

      - name: trivy build-analyze-scan
        run: trivy fs . > trivyfs.txt

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push action
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tic-tac-toe:${{github.run_id}}

      - name: scan image
        run: trivy image hammedakinwale/tic-tac-toe:latest > trivyimage.txt

  deploy:
    needs: build-analyze-scan
    runs-on: [self-hosted] # Use your self-hosted runner label here
    steps:
      - name: Pull the Docker image
        env:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        run: docker pull hammedakinwale/tic-tac-toe:latest

      - name: trivy image scan
        run: trivy image hammedakinwale/tic-tac-toe:latest # Add Trivy scan command here

      - name: Run the container
        run: docker run -d --name ticgame -p 3000:3000 hammedakinwale/tic-tac-toe:latest

      - name: Update kubeconfig
        run: aws eks --region us-east-1 update-kubeconfig --name ToDo-App

      - name: Deploy to kubernetes
        run: kubectl apply -f deployment-service.yml

      - name: Send a Slack Notification
        if: always()
        uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: '#githubactions-logs'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}